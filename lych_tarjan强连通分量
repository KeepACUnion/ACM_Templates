const int maxn = 110;
int dfn[maxn], low[maxn], n,m,t,bel[maxn],
    idx,cnt,scc;
vector<int> to[maxn];
stack<int> stk;

void init()
{
    memset(dfn , 0, sizeof(dfn));
    memset(in, 0, sizeof(in));
    memset(out, 0, sizeof(out));
    memset(scc, 0, sizeof(scc));
    for(int i = 1; i <= n; i++) to[i].clear();
    while(!stk.empty()) stk.pop();
    idx = scc = 0;
}

void tarjan(int u)
{
    stk.push(u);
    dfn[u] = low[u] = ++idx;
    for(int i = 0; i < to[u].size(); i++){
        int v = to[u][i];
        if(dfn[v] == 0){
            tarjan(v);
            low[u] = min(low[u], low[v]);
        }else if(dfn[v] > 0){
            low[u] = min(low[u], dfn[v]);
        }
    }
    if(dfn[u] == low[u]){
        int v;
        do{
            v = stk.top();
            stk.pop();
            bel[v] = scc;
            dfn[v] = -1;
        }while(v != u);
        scc++;
    }
}
